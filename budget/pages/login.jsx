import { useState } from "react";
import { Button, PasswordInput, TextInput, NumberInput } from "@mantine/core";
import { login, register } from "../utils/auth.js";

import { useRouter } from "next/router";
export default function Login() {
  const [password, setPassword] = useState("");
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");

  const [age, setAge] = useState(null);
  const [income, setIncome] = useState(null);

  const [view, setView] = useState("reg");
  const Router = useRouter();

  async function handleSubmit() {
    const response = await register(email, password, age, income, name);
    if (response) {
      Router.push("/");
      console.log("hey");
    }
  }
  return (
    <>
      <div className="flex flex-col w-full h-screen justify-end p-5 gap-8">
        <div className="inline-flex flex-col pb-4  w-full self-start">
          <p className="text-2xl font-semibold tracking-wide leading-loose text-gray-800">
            Hi, Welcome Back! ðŸ‘‹
          </p>
          <p className="text-sm tracking-wide leading-snug text-gray-500">
            Lorem ipsum dolor sit amet, consectetur
          </p>
        </div>
        <svg
          className="w-full h-12 my-4"
          width="80"
          height="40"
          viewBox="0 0 41 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M3.374 6.85V9.944C3.27133 9.972 3.108 10 2.884 10.028C2.66 10.056 2.44067 10.07 2.226 10.07C2.01133 10.07 1.82 10.0513 1.652 10.014C1.49333 9.986 1.358 9.93 1.246 9.846C1.134 9.762 1.05 9.64533 0.994 9.496C0.938 9.34667 0.91 9.15067 0.91 8.908V1.516C1.01267 1.49733 1.176 1.474 1.4 1.446C1.624 1.40867 1.83867 1.39 2.044 1.39C2.25867 1.39 2.44533 1.40867 2.604 1.446C2.772 1.474 2.912 1.53 3.024 1.614C3.136 1.698 3.22 1.81467 3.276 1.964C3.332 2.11333 3.36 2.30933 3.36 2.552V4.778L6.272 1.432C6.90667 1.432 7.35933 1.55333 7.63 1.796C7.91 2.02933 8.05 2.30933 8.05 2.636C8.05 2.87867 7.98933 3.10733 7.868 3.322C7.74667 3.53667 7.55067 3.77933 7.28 4.05L5.53 5.8C5.76333 6.06133 6.006 6.332 6.258 6.612C6.51933 6.892 6.77133 7.16733 7.014 7.438C7.266 7.69933 7.504 7.95133 7.728 8.194C7.96133 8.43667 8.162 8.64667 8.33 8.824C8.33 9.02933 8.29267 9.21133 8.218 9.37C8.14333 9.52867 8.04067 9.664 7.91 9.776C7.78867 9.888 7.64867 9.972 7.49 10.028C7.33133 10.084 7.16333 10.112 6.986 10.112C6.60333 10.112 6.29067 10.0187 6.048 9.832C5.80533 9.636 5.572 9.40733 5.348 9.146L3.374 6.85ZM9.34292 3.294C9.43625 3.266 9.58092 3.238 9.77692 3.21C9.98225 3.182 10.1923 3.168 10.4069 3.168C10.6123 3.168 10.7943 3.182 10.9529 3.21C11.1209 3.238 11.2609 3.294 11.3729 3.378C11.4849 3.462 11.5689 3.57867 11.6249 3.728C11.6903 3.868 11.7229 4.05467 11.7229 4.288V7.298C11.7229 7.68067 11.8163 7.956 12.0029 8.124C12.1896 8.28267 12.4603 8.362 12.8149 8.362C13.0296 8.362 13.2023 8.34333 13.3329 8.306C13.4729 8.26867 13.5803 8.23133 13.6549 8.194V3.294C13.7483 3.266 13.8929 3.238 14.0889 3.21C14.2943 3.182 14.5043 3.168 14.7189 3.168C14.9243 3.168 15.1063 3.182 15.2649 3.21C15.4329 3.238 15.5729 3.294 15.6849 3.378C15.7969 3.462 15.8809 3.57867 15.9369 3.728C16.0023 3.868 16.0349 4.05467 16.0349 4.288V8.544C16.0349 9.01067 15.8389 9.36067 15.4469 9.594C15.1203 9.79933 14.7283 9.95333 14.2709 10.056C13.8229 10.168 13.3329 10.224 12.8009 10.224C12.2969 10.224 11.8303 10.168 11.4009 10.056C10.9809 9.944 10.6169 9.77133 10.3089 9.538C10.0009 9.30467 9.76292 9.006 9.59492 8.642C9.42692 8.26867 9.34292 7.82067 9.34292 7.298V3.294ZM17.5894 0.886C17.6827 0.857999 17.832 0.83 18.0374 0.802C18.2427 0.764667 18.4527 0.746 18.6674 0.746C18.8727 0.746 19.0547 0.76 19.2134 0.787999C19.3814 0.815999 19.5214 0.872 19.6334 0.956C19.7454 1.04 19.8294 1.15667 19.8854 1.306C19.9414 1.446 19.9694 1.63267 19.9694 1.866V3.238C20.2027 3.14467 20.422 3.07933 20.6274 3.042C20.842 3.00467 21.0754 2.986 21.3274 2.986C21.7754 2.986 22.2 3.06533 22.6014 3.224C23.0027 3.38267 23.3574 3.616 23.6654 3.924C23.9734 4.22267 24.216 4.596 24.3934 5.044C24.5707 5.492 24.6594 6.01 24.6594 6.598C24.6594 7.20467 24.566 7.73667 24.3794 8.194C24.202 8.642 23.95 9.01533 23.6234 9.314C23.2967 9.61267 22.8954 9.84133 22.4194 10C21.9527 10.1493 21.4347 10.224 20.8654 10.224C20.2494 10.224 19.7267 10.1493 19.2974 10C18.868 9.86 18.504 9.68267 18.2054 9.468C17.7947 9.17867 17.5894 8.80533 17.5894 8.348V0.886ZM20.8654 8.348C21.2947 8.348 21.626 8.20333 21.8594 7.914C22.102 7.61533 22.2234 7.17667 22.2234 6.598C22.2234 6.01 22.102 5.57133 21.8594 5.282C21.6167 4.99267 21.29 4.848 20.8794 4.848C20.6927 4.848 20.5294 4.86667 20.3894 4.904C20.2587 4.94133 20.114 4.99733 19.9554 5.072V8.124C20.058 8.18933 20.1794 8.24533 20.3194 8.292C20.4687 8.32933 20.6507 8.348 20.8654 8.348ZM29.4872 10.224C28.9365 10.224 28.4232 10.1493 27.9472 10C27.4805 9.84133 27.0698 9.608 26.7152 9.3C26.3698 8.992 26.0945 8.60467 25.8892 8.138C25.6932 7.67133 25.5952 7.12533 25.5952 6.5C25.5952 5.884 25.6932 5.35667 25.8892 4.918C26.0945 4.47 26.3605 4.106 26.6872 3.826C27.0138 3.53667 27.3872 3.32667 27.8072 3.196C28.2272 3.056 28.6565 2.986 29.0952 2.986C29.5898 2.986 30.0378 3.06067 30.4392 3.21C30.8498 3.35933 31.1998 3.56467 31.4892 3.826C31.7878 4.08733 32.0165 4.4 32.1752 4.764C32.3432 5.128 32.4272 5.52467 32.4272 5.954C32.4272 6.27133 32.3385 6.514 32.1612 6.682C31.9838 6.85 31.7365 6.95733 31.4192 7.004L27.9612 7.522C28.0638 7.83 28.2738 8.06333 28.5912 8.222C28.9085 8.37133 29.2725 8.446 29.6832 8.446C30.0658 8.446 30.4252 8.39933 30.7612 8.306C31.1065 8.20333 31.3865 8.08667 31.6012 7.956C31.7505 8.04933 31.8765 8.18 31.9792 8.348C32.0818 8.516 32.1332 8.69333 32.1332 8.88C32.1332 9.3 31.9372 9.61267 31.5452 9.818C31.2465 9.97667 30.9105 10.084 30.5372 10.14C30.1638 10.196 29.8138 10.224 29.4872 10.224ZM29.0952 4.722C28.8712 4.722 28.6752 4.75933 28.5072 4.834C28.3485 4.90867 28.2178 5.00667 28.1152 5.128C28.0125 5.24 27.9332 5.37067 27.8772 5.52C27.8305 5.66 27.8025 5.80467 27.7932 5.954L30.1872 5.562C30.1592 5.37533 30.0565 5.18867 29.8792 5.002C29.7018 4.81533 29.4405 4.722 29.0952 4.722ZM33.6988 5.352C33.6428 5.27733 33.5914 5.17 33.5448 5.03C33.4981 4.89 33.4748 4.74067 33.4748 4.582C33.4748 4.28333 33.5401 4.07333 33.6708 3.952C33.8108 3.82133 33.9788 3.756 34.1748 3.756H40.0548C40.1014 3.84 40.1481 3.952 40.1948 4.092C40.2508 4.232 40.2788 4.38133 40.2788 4.54C40.2788 4.82933 40.2088 5.03933 40.0688 5.17C39.9381 5.29133 39.7748 5.352 39.5788 5.352H38.7248C38.6781 5.83733 38.5008 6.262 38.1928 6.626C37.8848 6.98067 37.4414 7.23733 36.8628 7.396L38.8928 8.768C38.8928 9.188 38.7854 9.53333 38.5708 9.804C38.3654 10.0747 38.0528 10.21 37.6328 10.21C37.3901 10.21 37.1661 10.1447 36.9608 10.014C36.7648 9.88333 36.5734 9.734 36.3868 9.566L34.0488 7.424C33.9834 7.284 33.9508 7.12067 33.9508 6.934C33.9508 6.56067 34.1001 6.28067 34.3988 6.094H35.2248C35.5234 6.094 35.7568 6.02867 35.9248 5.898C36.1021 5.758 36.2281 5.576 36.3028 5.352H33.6988ZM33.6988 3.098C33.6428 3.014 33.5914 2.902 33.5448 2.762C33.4981 2.622 33.4748 2.47267 33.4748 2.314C33.4748 2.02467 33.5401 1.81933 33.6708 1.698C33.8108 1.56733 33.9788 1.502 34.1748 1.502H40.0548C40.1014 1.57667 40.1481 1.68867 40.1948 1.838C40.2508 1.978 40.2788 2.12267 40.2788 2.272C40.2788 2.57067 40.2088 2.78533 40.0688 2.916C39.9381 3.03733 39.7748 3.098 39.5788 3.098H33.6988Z"
            fill="black"
          />
        </svg>
        <TextInput
          placeholder="John Doe"
          label="Full Name"
          radius="lg"
          size="lg"
          value={name}
          onChange={(event) => setName(event.currentTarget.value)}
          withAsterisk
          className="w-full"
          styles={{
            input: {
              "&:hover": { borderColor: "black" },
              "&:focus": { borderColor: "black" },
              background: "none",
              borderWidth: "2px",
            },
          }}
        />
        <TextInput
          placeholder="jacob@gmail.com"
          label="Email Address"
          radius="lg"
          size="lg"
          withAsterisk
          value={email}
          onChange={(event) => setEmail(event.currentTarget.value)}
          className="w-full"
          styles={{
            input: {
              "&:hover": { borderColor: "black" },
              "&:focus": { borderColor: "black" },
              background: "none",
              borderWidth: "2px",
            },
          }}
        />
        <PasswordInput
          placeholder="*******"
          label="Password"
          radius="lg"
          size="lg"
          withAsterisk
          value={password}
          onChange={(event) => setPassword(event.currentTarget.value)}
          className="w-full"
          styles={{
            input: {
              "&:hover": { borderColor: "black" },
              "&:focus": { borderColor: "black" },
              background: "none",
              borderWidth: "2px",
            },
          }}
        />
        {view == "reg" && (
          <div className="flex items-center justify-between gap-4">
            <NumberInput
              defaultValue={18}
              placeholder="21"
              label="Your age"
              radius="lg"
              size="lg"
              withAsterisk
              value={age}
              onChange={(value) => setAge(value)}
            />
            <NumberInput
              defaultValue={10000}
              placeholder="15000"
              label="Income"
              radius="lg"
              size="lg"
              value={income}
              onChange={(value) => setIncome(value)}
              withAsterisk
            />
          </div>
        )}
        <Button
          color="dark"
          radius="md"
          size="lg"
          className="w-full"
          onClick={handleSubmit}
          styles={{ root: { width: "100%" } }}
        >
          {view == "reg" ? "Sign Up" : "Sign In"}
        </Button>
        {view == "reg" ? (
          <p className="text-base font-medium tracking-wide leading-normal text-center">
            Already have an account? Sign In
          </p>
        ) : (
          <p className="text-base font-medium tracking-wide leading-normal text-center">
            Already have an account? Sign Up
          </p>
        )}
      </div>
    </>
  );
}
